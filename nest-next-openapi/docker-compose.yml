x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

x-common-labels: &default-labels
  logging: "promtail"
  logging_jobname: "containerlogs"
  stackname: "docker-monitoring-stack-gpnc"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-nn-openapi-template
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - default
    ports:
      - "5433:5432" # This line exposes Postgres on the VPS public IP
    labels:
      <<: *default-labels
    logging: *default-logging

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-11.0.0}
    container_name: grafana-nn-openapi-template
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=dark
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=critical
      - GF_PANELS_ENABLE_ALPHA=true
      - GF_FEATURE_TOGGLES_ENABLE=accessControlOnCall lokiLogsDataplane
      - GF_INSTALL_PLUGINS=grafana-polystat-panel,https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    volumes:
      - ./monitoring/configs/grafana/provisioning/dashboards.yml:/etc/grafana/provisioning/dashboards/provisioning-dashboards.yaml:ro
      - ./monitoring/configs/grafana/provisioning/datasources.yml:/etc/grafana/provisioning/datasources/provisioning-datasources.yaml:ro
      - ./monitoring/configs/grafana/plugins/app.yaml:/etc/grafana/provisioning/plugins/app.yaml:ro
      - ./monitoring/dashboards/node-metrics.json:/var/lib/grafana/dashboards/node-metrics.json:ro
      - ./monitoring/dashboards/container-metrics.json:/var/lib/grafana/dashboards/container-metrics.json:ro
      - ./monitoring/dashboards/log-search.json:/var/lib/grafana/dashboards/log-search.json:ro
      - ./monitoring/dashboards/traefik_official.json:/var/lib/grafana/dashboards/traefik_official.json:ro
      - ./monitoring/dashboards/alertmanager-dashboard.json:/var/lib/grafana/dashboards/alertmanager-dashboard.json:ro
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    ports:
      - 3043:3000
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
      - traefik-public
    labels:
      <<: *default-labels
      traefik.enable: true
      traefik.docker.network: traefik-public
      traefik.http.routers.grafana-nn-openapi-template.rule: Host(`${GRAFANA_DOMAIN?Variable not set}`)
      traefik.http.routers.grafana-nn-openapi-template.entrypoints: https
      traefik.http.routers.grafana-nn-openapi-template.tls: true
      traefik.http.routers.grafana-nn-openapi-template.tls.certresolver: le
      traefik.http.services.grafana-nn-openapi-template.loadbalancer.server.port: 3000
    logging: *default-logging

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-v2.42.0}
    container_name: prometheus-nn-openapi-template
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--log.level=error"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.external-url=http://localhost:9090"
    volumes:
      - ./monitoring/configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/configs/prometheus/recording-rules.yml:/etc/prometheus/recording-rules.yml
      - ./monitoring/configs/prometheus/alerting-rules.yml:/etc/prometheus/alerting-rules.yml
      - prometheus-data:/prometheus
    depends_on:
      - alertmanager
    ports:
      - 9097:9090
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${CADVISOR_VERSION:-v0.46.0}
    container_name: cadvisor-nn-openapi-template
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
        # https://github.com/google/cadvisor/issues/1565#issuecomment-718812180
      - /var/run/docker.sock:/var/run/docker.sock
      #- /dev/disk:/dev/disk:ro
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_VERSION:-v1.5.0}
    container_name: node-exporter-nn-openapi-template
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  alertmanager:
    image: prom/alertmanager:${ALERTMANAGER_VERSION:-v0.25.0}
    container_name: alertmanager-nn-openapi-template
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--log.level=error"
      - "--storage.path=/alertmanager"
      - "--web.external-url=http://localhost:9093"
    volumes:
      - ./monitoring/configs/alertmanager/alertmanager-fallback-config.yml:/etc/alertmanager/config.yml
    ports:
      - 9095:9093
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    depends_on:
      - uncomplicated-alert-receiver
    labels:
      <<: *default-labels
    logging: *default-logging

  uncomplicated-alert-receiver:
    image: ghcr.io/jamesread/uncomplicated-alert-receiver
    container_name: uncomplicated-alert-receiver-nn-openapi-template
    ports:
      - 9096:8080
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  loki:
    image: grafana/loki:3.0.0
    container_name: loki-nn-openapi-template
    user: root
    ports:
      - 3101:3100
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - ./monitoring/configs/loki/loki.yaml:/etc/loki/loki.yaml
      - ./monitoring/configs/loki/rules.yaml:/etc/loki/rules/fake/loki-rules.yml
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail-nn-openapi-template
    volumes:
      - ./monitoring/configs/promtail/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  next:
    build:
      context: ./next
      dockerfile: Dockerfile
    container_name: next-nn-openapi-template
    restart: always
    environment:
      - NODE_ENV=production
    env_file:
      - .env
    labels:
      <<: *default-labels
      traefik.enable: true
      traefik.docker.network: traefik-public

      traefik.http.routers.frontend-nn-openapi-template-client-http.rule: Host(`${NEXT_DOMAIN}`)
      traefik.http.routers.frontend-nn-openapi-template-client-http.entrypoints: http
      traefik.http.routers.frontend-nn-openapi-template-client-http.middlewares: https-redirect
      traefik.http.routers.frontend-nn-openapi-template-client-http.service: frontend-nn-openapi-template-client-service

      traefik.http.routers.frontend-nn-openapi-template-client-https.rule: Host(`${NEXT_DOMAIN}`)
      traefik.http.routers.frontend-nn-openapi-template-client-https.entrypoints: https
      traefik.http.routers.frontend-nn-openapi-template-client-https.tls: true
      traefik.http.routers.frontend-nn-openapi-template-client-https.tls.certresolver: le
      traefik.http.routers.frontend-nn-openapi-template-client-https.service: frontend-nn-openapi-template-client-service

      traefik.http.services.frontend-nn-openapi-template-client-service.loadbalancer.server.port: 3000
      traefik.http.middlewares.frontend-nn-openapi-template-client-headers.headers.customrequestheaders.X-Forwarded-Proto: https
    logging: *default-logging
    networks:
      - traefik-public
      - default
    depends_on:
      - postgres

  nest:
    build:
      context: nest
      dockerfile: Dockerfile
    container_name: nest-nn-openapi-template
    restart: unless-stopped
    ports:
      - 8001:3000
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - default
      - traefik-public
    labels:
      <<: *default-labels
      traefik.enable: true
      traefik.docker.network: traefik-public

      traefik.http.routers.nest-nn-openapi-template-http.rule: Host(`${NEST_DOMAIN}`)
      traefik.http.routers.nest-nn-openapi-template-http.entrypoints: http
      traefik.http.routers.nest-nn-openapi-template-http.middlewares: https-redirect
      traefik.http.routers.nest-nn-openapi-template-http.service: nest-nn-openapi-template-service

      traefik.http.routers.nest-nn-openapi-template-https.rule: Host(`${NEST_DOMAIN}`)
      traefik.http.routers.nest-nn-openapi-template-https.entrypoints: https
      traefik.http.routers.nest-nn-openapi-template-https.tls: true
      traefik.http.routers.nest-nn-openapi-template-https.tls.certresolver: le
      traefik.http.routers.nest-nn-openapi-template-https.service: nest-nn-openapi-template-service

      traefik.http.services.nest-nn-openapi-template-service.loadbalancer.server.port: 3000
    logging: *default-logging

  redis:
    image: redis:latest
    container_name: redis-nn-openapi-template
    ports:
      - 6380:6379
    cpus: 0.5
    mem_limit: 512m
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

volumes:
  grafana-data:
  prometheus-data:
  postgres-data:

networks:
  default:
    driver: bridge
  traefik-public:
    external: true
