generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-zod-generator"
  output   = "../src/generated/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                      String    @id @default(uuid()) // Django used AbstractBaseUser id (auto pk). If you want integer use Int @id @default(autoincrement()).
  email                   String    @unique
  phone                   String?   @unique
  password                String? // AbstractBaseUser stores hashed password; keep nullable to allow unusable password.
  avatar                  String? // URL
  name                    String?
  birthday                DateTime?
  otp                     String?
  email_unsubscribe_token String    @unique @default(uuid())
  referral_code           String    @unique @default(uuid())

  refresh_tokens       RefreshToken[]
  
  is_banned               Boolean   @default(false)
  is_email_verified       Boolean   @default(false)
  is_phone_verified       Boolean   @default(false)
  is_email_subscribed     Boolean   @default(false)
  is_phone_subscribed     Boolean   @default(false)
  is_staff                Boolean   @default(false)
  is_active               Boolean   @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model RefreshToken {
  id         String   @id @default(uuid())
  token      String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  revoked    Boolean  @default(false)
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  replacedBy String?  // id of replacement token (optional)
  @@index([userId])
}
